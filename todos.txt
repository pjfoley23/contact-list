DONE get bootstrap

in index.js: 
DONE import '../node_modules/bootstrap/dist/css/bootstrap.min.css';
DONE import { BrowserRouter } from 'react-router-dom';
const App = () => (  // for router
  <div>
    <Main />
  </div>
);

App.js "Header" - Contacts  + Add Contact button. event 'click' 'addContact' + state contacts[]
<Main />
Contact-list - stateless?
Contact- links edit delete  
AddContact
EditContact

import PropTypes from 'prop-types'
input field example

<div className="form-group">
  <input
    className="form-control"
    placeholder="Post Text"
    value={this.state.text}
    onChange={event => this.setState({text: event.target.value})}
     />

  <br/>

* router for index.js

const Main = () => (
  <main>
    <Switch>
      <Route exact path="/" component={Contacts} />
      <Route path="/add" component={addContact} />
      <Route path="/edit/:key" component={editContact} />
    </Switch>
  </main>
);


----------------------------------
  * stateless constructor example
  
DONE import React from 'react'

const ContactsList = () => {  // TODO index/key is to be made random, so this is just a basic pass
const contactsAll = props.contacts.map((contact, index)) => {
  return (
    <Contact key={index} contact={contact.name} />
  )
}
  return (
    <ul classname='col-md-4 contacts-list'> // ul is just for example
      {contactsAll}
    </u>
  )
}

export default ContactsList


--------------------
 DONE contact.js  (stateless at the momement)

const Contact = ({contact}) => {
  return (
    <li>
      <span>{contact.name} - <a href="#edit">edit</a>&nbsp;<a href="#delete">delete</a></span>
    </li>
  )
}


To pass data from form to App's state array (contacts[]) define function in App and pass to form component through props
<AddContactForm addContact={this.addContact} />

  <ContactsList contacts={this.state.contacts} />


addContact (newContact) { this.setState({contacts: this.state.contacts.concat([newContact])});}
this.addContact = this.addContact.bind(this);

event in AddContact calls this.props.addContact(newContact);

* bind handleClick event 

this.state =
{
  "contacts": [
    {
      "key": 70219577,
      "name": "Albert Einstein",
      "image_url": "https://en.wikipedia.org/wiki/Albert_Einstein#/media/File:Einstein_1921_by_F_Schmutzer_-_restoration.jpg",
      "email": "aeinstein@example.com",
      "phone_number": "15555555555"
    },
       {
      "key": 745689488,
      "name": "Neils Bohr",
      "image_url": "http://scihi.org/wp-content/uploads/2019/10/Niels_Bohr.jpg",
      "email": "bohr_n@example.com",
      "phone_number": "15551235555"
    },
       {
      "key": 215856254,
      "name": "Ryan Gosling",
      "image_url": "https://images.squarespace-cdn.com/content/v1/5330664de4b0c8441aea50d8/1447360884466-K7Z81VSCRD94LDARHL5V/ke17ZwdGBToddI8pDm48kIBYwL2gfjkuDM9ElJqjMeJZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZUJFbgE-7XRK3dMEBRBhUpw39SRFH7cZwRLAEdpZ_iLZN9tRJH6LUQfzxqckA9e31aHfMUHTKgG7XCAW3iRQW3w/hey+girl?format=1000w",
      "email": "babygoose@example.com",
      "phone_number": "15556661212"
    }

  ]
}

router stuff:  https://github.com/projectshft/cohort-10-curriculum/blob/cohort-10/week-05/day-02/react-router.md

hash history needed?  does global state take care of this

use proptypes

.propTypes = {
  // This time it's not required, but that's alright since we provide a default
  // value!
  name: PropTypes.string
};


TEST passing key to Contact, but not utilizing explicitly
MAYBE break header into own component
MAYBE break out App and Home